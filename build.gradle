plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'

    id 'io.freefair.lombok' version '8.12.2.1'
    id 'com.adarshr.test-logger' version '4.0.0'
    id 'org.gradle.test-retry' version '1.6.2'
}

group = 'com.prosilion'
version = '1.11.0'
description = 'superconductor'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    developmentOnly 'org.springframework.boot:spring-boot-devtools:3.4.3'
    
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'xyz.tcheeric:nostr-java-api:0.6.5-SNAPSHOT'
    implementation 'xyz.tcheeric:nostr-java-event:0.6.5-SNAPSHOT'
    implementation 'xyz.tcheeric:nostr-java-id:0.6.5-SNAPSHOT'

    implementation 'com.google.guava:guava:33.2.1-jre'
    implementation 'com.h2database:h2'
    implementation 'com.mysql:mysql-connector-j'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    
    testImplementation 'org.awaitility:awaitility:4.2.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    systemProperty("spring.profiles.active", "test")
    useJUnitPlatform()
}

test {
    retry {
//        failOnPassedAfterRetry = true
        maxRetries = 2
//        maxFailures = 42
    }
}

tasks.register("bootRunLocalWs") {
    group = "application"
    description = "Superconductor STANDARD MODE: local_ws"
    doFirst {
        tasks.bootRun.configure {
            systemProperty("spring.profiles.active", "local_ws")
        }
    }
    finalizedBy("bootRun")
}

tasks.register("bootRunLocalWss") {
    group = "application"
    description = "Superconductor SECURE MODE: local_wss"
    doFirst {
        tasks.bootRun.configure {
            systemProperty("spring.profiles.active", "local_wss")
        }
    }
    finalizedBy("bootRun")
}
